## bitFlow.template
## Template database file to control the features of CoaXPress cameras using BitFlow framegrabbers and SDK.
##
## Note: this file contains only the records that are not handled by the GenICam autogenerated database

include "ADGenICam.template"

record(bo, "$(P)$(R)TimeStampMode")
{
   field(PINI, "YES")
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT) 0)ES_TIME_STAMP_MODE")
   field(ZNAM, "Camera")
   field(ONAM, "EPICS")
}

record(bi, "$(P)$(R)TimeStampMode_RBV")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT) 0)ES_TIME_STAMP_MODE")
   field(ZNAM, "Camera")
   field(ONAM, "EPICS")
   field(SCAN, "I/O Intr")
}

record(bo, "$(P)$(R)UniqueIdMode")
{
   field(PINI, "YES")
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT) 0)ES_UNIQUE_ID_MODE")
   field(ZNAM, "Camera")
   field(ONAM, "Driver")
}

record(bi, "$(P)$(R)UniqueIdMode_RBV")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT) 0)ES_UNIQUE_ID_MODE")
   field(ZNAM, "Camera")
   field(ONAM, "Driver")
   field(SCAN, "I/O Intr")
}

## Convert pixel format
record(mbbo, "$(P)$(R)ConvertPixelFormat") {
  field(PINI, "YES")
  field(DTYP, "asynInt32")
  field(ZRVL, "0")
  field(ZRST, "None")
  field(ONVL, "1")
  field(ONST, "Mono8")
  field(TWVL, "2")
  field(TWST, "Mono16")
  field(THVL, "3")
  field(THST, "Raw16")
  field(FRVL, "4")
  field(FRST, "RGB8")
  field(FVVL, "5")
  field(FVST, "RGB16")
  field(OUT,  "@asyn($(PORT) 0)ES_CONVERT_PIXEL_FORMAT")
}

record(mbbi, "$(P)$(R)ConvertPixelFormat_RBV") {
  field(SCAN, "I/O Intr")
  field(DTYP, "asynInt32")
  field(ZRVL, "0")
  field(ZRST, "None")
  field(ONVL, "1")
  field(ONST, "Mono8")
  field(TWVL, "2")
  field(TWST, "Mono16")
  field(THVL, "3")
  field(THST, "Raw16")
  field(FRVL, "4")
  field(FRST, "RGB8")
  field(FVVL, "5")
  field(FVST, "RGB16")
  field(INP,  "@asyn($(PORT) 0)ES_CONVERT_PIXEL_FORMAT")
}

## Unpacking mode
record(mbbo, "$(P)$(R)UnpackingMode") {
  field(PINI, "YES")
  field(DTYP, "asynInt32")
  field(ZRVL, "0")
  field(ZRST, "LSB")
  field(ONVL, "1")
  field(ONST, "MSB")
  field(TWVL, "2")
  field(TWST, "Off")
  field(OUT,  "@asyn($(PORT) 0)ES_UNPACKING_MODE")
}

record(mbbi, "$(P)$(R)UnpackingMode_RBV") {
  field(SCAN, "I/O Intr")
  field(DTYP, "asynInt32")
  field(ZRVL, "0")
  field(ZRST, "LSB")
  field(ONVL, "1")
  field(ONST, "MSB")
  field(TWVL, "2")
  field(TWST, "Off")
  field(INP,  "@asyn($(PORT) 0)ES_UNPACKING_MODE")
}

record(longin, "$(P)$(R)ESBufferSize")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT) 0)ES_BUFFER_SIZE")
   field(SCAN, "I/O Intr")
}

record(longin, "$(P)$(R)OutputQueue")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT) 0)ES_OUTPUT_QUEUE")
   field(SCAN, "I/O Intr")
}

record(longin, "$(P)$(R)RejectedFrames")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT) 0)ES_REJECTED_FRAMES")
   field(SCAN, "I/O Intr")
}

record(longin, "$(P)$(R)CRCErrors")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT) 0)ES_CRC_ERROR_COUNT")
   field(SCAN, "I/O Intr")
}

record(bo, "$(P)$(R)ResetErrorCounts")
{
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT) 0)ES_RESET_ERROR_COUNTS")
   field(ZNAM, "Done")
   field(ONAM, "Reset")
}

record(ai, "$(P)$(R)ProcessTotalTime")
{
   field(DTYP, "asynFloat64")
   field(INP,  "@asyn($(PORT) 0)ES_PROCESS_TOTAL_TIME")
   field(SCAN, "I/O Intr")
   field(PREC, "3")
}

record(ai, "$(P)$(R)ProcessCopyTime")
{
   field(DTYP, "asynFloat64")
   field(INP,  "@asyn($(PORT) 0)ES_PROCESS_COPY_TIME")
   field(SCAN, "I/O Intr")
   field(PREC, "3")
}
