# This file was automatically generated on Thu 20 Mar 2014 09:02:07 GMT from
# source: /dls_sw/prod/R3.14.12.3/support/adPython/0-2/etc/makeIocs/example.xml
# 
# *** Please do not edit this file: edit the source file instead. ***
# 
/**
\page build_instructions_example Build Instructions for example
Build Instructions for example
<ol>
<li> Add the dependencies to configure/RELEASE.
\verbatim
ASYN=/dls_sw/prod/R3.14.12.3/support/asyn/4-21
BUSY=/dls_sw/prod/R3.14.12.3/support/busy/1-4dls1
AREADETECTOR=/dls_sw/prod/R3.14.12.3/support/areaDetector/1-9dls4
ADPYTHON=/dls_sw/prod/R3.14.12.3/support/adPython/0-2
\endverbatim

<li> Add the DBD dependencies to src/Makefile
\verbatim
example_DBD += base.dbd
example_DBD += asyn.dbd
example_DBD += busySupport.dbd
example_DBD += ADSupport.dbd
example_DBD += NDPluginSupport.dbd
example_DBD += URLDriverSupport.dbd
example_DBD += adPythonPlugin.dbd
\endverbatim

<li> Add the LIBS dependencies to src/Makefile
\verbatim
example_LIBS += adPython
example_LIBS += URLDriver
example_LIBS += NDPlugin
example_LIBS += ADBase
example_LIBS += netCDF
example_LIBS += cbfad
example_LIBS += NeXus
example_LIBS += hdf5
example_LIBS += sz
example_LIBS += PvAPI
example_LIBS += GraphicsMagick++
example_LIBS += GraphicsMagickWand
example_LIBS += GraphicsMagick
example_LIBS += busy
example_LIBS += asyn
example_SYS_LIBS += tiff
example_SYS_LIBS += jpeg
example_SYS_LIBS += z
example_SYS_LIBS += gomp
example_SYS_LIBS += X11
example_SYS_LIBS += xml2
example_SYS_LIBS += png12
example_SYS_LIBS += bz2
example_SYS_LIBS += Xext
example_SYS_LIBS += freetype
\endverbatim

<li> Use the template files to add records to the database.
\verbatim

# Macros:
#  P        Device Prefix
#  R        Device Suffix
#  PORT     Asyn Port name
#  TIMEOUT  Timeout
#  ADDR     Asyn Port address
file $(AREADETECTOR)/db/ADBase.template
{
pattern { P, R, PORT, TIMEOUT, ADDR }
    { "ADPYTHONTEST", ":URL:", "CAM.URL", "1", "0" }
}

# Macros:
#  P        Device Prefix
#  R        Device Suffix
#  PORT     Asyn Port name
#  TIMEOUT  Timeout
#  ADDR     Asyn Port address
file $(AREADETECTOR)/db/URLDriver.template
{
pattern { P, R, PORT, TIMEOUT, ADDR }
    { "ADPYTHONTEST", ":URL:", "CAM.URL", "1", "0" }
}

# Macros:
#  P             Device Prefix
#  R             Device Suffix
#  PORT          Asyn Port name
#  TIMEOUT       Timeout
#  ADDR          Asyn Port address
#  NDARRAY_PORT  Input Array Port
#  NDARRAY_ADDR  Input Array Address
#  Enabled       Plugin Enabled at startup?
file $(AREADETECTOR)/db/NDPluginBase.template
{
pattern { P, R, PORT, TIMEOUT, ADDR, NDARRAY_PORT, NDARRAY_ADDR, Enabled }
    { "ADPYTHONTEST", ":PY1:", "CAM.PY1", "1", "0", "CAM.URL", "0", "1" }
    { "ADPYTHONTEST", ":ARR1:", "CAM.ARR1", "1", "0", "CAM.PY1", "0", "1" }
    { "ADPYTHONTEST", ":HDF:", "CAM.HDF", "1", "0", "CAM.PY1", "0", "1" }
}

# Macros:
#  P        Device Prefix
#  R        Device Suffix
#  PORT     Asyn Port name
#  TIMEOUT  Timeout
file $(ADPYTHON)/db/adPythonPlugin.template
{
pattern { P, R, PORT, TIMEOUT }
    { "ADPYTHONTEST", ":PY1:", "CAM.PY1", "1" }
}

# Macros:
#  P        Device Prefix
#  R        Device Suffix
#  PORT     Asyn Port name
#  TIMEOUT  Timeout
#  ADDR     Asyn Port address
file $(ADPYTHON)/db/adPythonTemplate.template
{
pattern { P, R, PORT, TIMEOUT, ADDR }
    { "ADPYTHONTEST", ":PY1:", "CAM.PY1", "1", "0" }
}

# Macros:
#  P          Device Prefix
#  R          Device Suffix
#  PORT       Asyn Port name
#  TIMEOUT    Timeout
#  ADDR       Asyn Port address
#  TYPE       Asyn Type e.g. Int32
#  FTVL       Format, e.g. Int
#  NELEMENTS  Number of elements
file $(AREADETECTOR)/db/NDStdArrays.template
{
pattern { P, R, PORT, TIMEOUT, ADDR, TYPE, FTVL, NELEMENTS }
    { "ADPYTHONTEST", ":ARR1:", "CAM.ARR1", "1", "0", "Int8", "UCHAR", "786432" }
}

# Macros:
#  P        Device Prefix
#  R        Device Suffix
#  PORT     Asyn Port name
#  TIMEOUT  Timeout
#  ADDR     Asyn Port address
file $(AREADETECTOR)/db/NDFile.template
{
pattern { P, R, PORT, TIMEOUT, ADDR }
    { "ADPYTHONTEST", ":HDF:", "CAM.HDF", "1", "0" }
}

# Macros:
#  P     Device Prefix
#  R     Device Suffix
#  PORT  Asyn Port name
file $(AREADETECTOR)/db/NDFileHDF5.template
{
pattern { P, R, PORT }
    { "ADPYTHONTEST", ":HDF:", "CAM.HDF" }
}
\endverbatim

<li> Add the startup commands to st.cmd
\verbatim

# Loading libraries
# -----------------

# Device initialisation
# ---------------------

cd "$(TOP)"

dbLoadDatabase "dbd/example.dbd"
example_registerRecordDeviceDriver(pdbbase)

# URLDriverConfig(portName, maxBuffers, maxMemory)
URLDriverConfig("CAM.URL", 50, 0)

# adPythonPluginConfigure(portName, filename, classname, queueSize, blockingCallbacks, NDArrayPort, NDArrayAddr, maxBuffers, maxMemory)
adPythonPluginConfigure("CAM.PY1", "$(ADPYTHON)/adPythonApp/scripts/adPythonTemplate.py", "Template", 16, 0, "CAM.URL", 0, 50, 0)

# NDStdArraysConfigure(portName, queueSize, blockingCallbacks, NDArrayPort, NDArrayAddr, maxMemory)
NDStdArraysConfigure("CAM.ARR1", 2, 0, "CAM.PY1", 0, 0)

# NDFileHDF5Configure(portName, queueSize, blockingCallbacks, NDArrayPort, NDArrayAddr)
NDFileHDF5Configure("CAM.HDF", 16, 0, "CAM.PY1", 0)
\endverbatim
</ol>
**/
