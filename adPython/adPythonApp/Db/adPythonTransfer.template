# % macro, P, Device Prefix
# % macro, R, Device Suffix
# % macro, PORT, Asyn Port name
# % macro, TIMEOUT, Timeout
# % macro, ADDR, Asyn Port address
# % gui, $(PORT), edmtab, adPythonTransfer.edl, P=$(P),R=$(R)

record(longin, "$(P)$(R)TcpPort_RBV") {
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))tcpport")
    field(SCAN, "I/O Intr")
}

record(longin, "$(P)$(R)NumClients_RBV") {
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))num_clients")
    field(SCAN, "I/O Intr")
}

record(longin, "$(P)$(R)Level_RBV") {
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))level")
    field(SCAN, "I/O Intr")
}

record(longout, "$(P)$(R)Level") {
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))level")
}

record(ai, "$(P)$(R)Ratio_RBV") {
    field(DTYP, "asynFloat64")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))ratio")
    field(SCAN, "I/O Intr")
    field(PREC, "3")
}

#record(mbbi, "$(P)$(R)Prefilter_RBV")
#{
#    field(DTYP, "asynInt32")
#    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))prefilter")
#    field(SCAN, "I/O Intr")
#    field(ZRST, "None")
#    field(ZRVL, "0")
#    field(ONST, "Open")
#    field(ONVL, "1")
#}

#record(mbbo, "$(P)$(R)Prefilter")
#{
#    field(DTYP, "asynInt32")
#    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))prefilter")
#    field(ZRST, "None")
#    field(ZRVL, "0")
#    field(ONST, "Open")
#    field(ONVL, "1")
#}

