# % macro, P, Device Prefix
# % macro, R, Device Suffix
# % macro, PORT, Asyn Port name
# % macro, TIMEOUT, Timeout

include "NDPluginBase.template"

record(ai, "$(P)$(R)Time_RBV")
{
    field(DTYP, "asynFloat64")
    field(DESC, "Time taken for plugin to run")
    field(INP,  "@asyn($(PORT),0,$(TIMEOUT))ADPYTHON_TIME")
    field(SCAN, "I/O Intr")
    field(PREC, "1")
    field(EGU,  "ms")
}

# File path.
# % autosave 2 
record(waveform, "$(P)$(R)Filename")
{
    field(DTYP, "asynOctetWrite")
    field(INP,  "@asyn($(PORT),0,$(TIMEOUT))ADPYTHON_FILENAME")
    field(FTVL, "CHAR")
    field(NELM, "256")
}

record(waveform, "$(P)$(R)Filename_RBV")
{
    field(DTYP, "asynOctetRead")
    field(INP,  "@asyn($(PORT),0,$(TIMEOUT))ADPYTHON_FILENAME")
    field(FTVL, "CHAR")
    field(NELM, "256")
    field(SCAN, "I/O Intr")
}

# Class name.
# % autosave 2 
record(waveform, "$(P)$(R)Classname")
{
    field(DTYP, "asynOctetWrite")
    field(INP,  "@asyn($(PORT),0,$(TIMEOUT))ADPYTHON_CLASSNAME")
    field(FTVL, "CHAR")
    field(NELM, "256")
}

record(waveform, "$(P)$(R)Classname_RBV")
{
    field(DTYP, "asynOctetRead")
    field(INP,  "@asyn($(PORT),0,$(TIMEOUT))ADPYTHON_CLASSNAME")
    field(FTVL, "CHAR")
    field(NELM, "256")
    field(SCAN, "I/O Intr")
}

# Read file
record(busy, "$(P)$(R)ReadFile")
{
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),0,$(TIMEOUT))ADPYTHON_LOAD")
    field(ZNAM, "Done")
    field(ONAM, "Read")
}

record(bi, "$(P)$(R)ReadFile_RBV")
{
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT),0,$(TIMEOUT))ADPYTHON_LOAD")
    field(ZNAM, "Done")
    field(ONAM, "Reading")
    field(SCAN, "I/O Intr")
}

record(mbbi, "$(P)$(R)PluginState_RBV")
{
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT),0,$(TIMEOUT))ADPYTHON_STATE")
    field(ZRST, "Good")
    field(ZRSV, "NO_ALARM")
    field(ZRVL, "0")
    field(ONST, "Bad")
    field(ONSV, "MAJOR")
    field(ONVL, "1")
    field(TWST, "Ugly")
    field(TWSV, "MAJOR")
    field(TWVL, "2")
    field(SCAN, "I/O Intr")
}
